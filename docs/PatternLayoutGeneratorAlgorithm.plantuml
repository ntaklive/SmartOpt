@startuml Algorithm
skinparam DefaultFontColor black
skinparam DefaultFontSize 12
skinparam DefaultFontName Aapex

start

:<img:out\PatternLayoutGeneratorUi\Ui.png>;

:Объединить заказы с идентичной шириной в один заказ;

if (Количество заказов меньше размера группы?) then (нет)
else (да)
  :Установить размер группы
  равным количеству заказов;
endif

while (Существуют заказы для группировки?) is (проверить)

  :Отсортировать все заказы по убыванию кол-ва рулонов;

  :Отобрать группу заказов
  исходя из размера группы;

  :Рассчитать % отходов группы;
  floating note: (1 - суммарная ширина группы / лимит ширины) * 100

  while (% отходов больше допустимого или\nменьше 0 (ширина раскладки больше допустимой)) is (да (<color:red>нельзя создать раскладку))
    
    partition "Поиск индекса подходящего заказа для замены с первым в группе" {
    
    :Подробнее;
    detach

    if (% отходов группы) then (>= % лимита(у) отходов)

      :Отсортировать заказы в группе по возрастанию ширины;

      -> Поиск индекса заказа\nудовлетворяющего условию;

      if (Ширина заказа больше минимального в группе?) then (Нет)
        #Red:<color:White>**Заказ не найден**;
        kill
      else (Да)
      endif

      if (Ширина искомого заказа - ширина минимального заказа в группе <\nлимит ширины * % отходов группы / 100) then (Нет)
        #Red:<color:White>**Заказ не найден**;
        kill
      else (Да)
      endif

      if (В заказе больше одного рулона?) then (Нет)
        #Red:<color:White>**Заказ не найден**;
        kill
      else (Да)
        #SpringGreen:**Заказ найден**;
        kill
      endif

    else (< 0)
      
      :Отсортировать заказы в группе по убыванию ширины;

      -> Поиск индекса заказа\nудовлетворяющего условию;

      if (Ширина заказа меньше максимального в группе?) then (Нет)
        #Red:<color:White>**Заказ не найден**;
        kill
      else (Да)
      endif

      if (Ширина максимального заказа в группе - ширина искомого заказа >\nлимит ширины * % отходов группы / 100) then (Нет)
        #Red:<color:White>**Заказ не найден**;
        kill
      else (Да)
      endif

      if (В заказе больше (>=) одного рулона?) then (Нет)
        #Red:<color:White>**Заказ не найден**;
        kill
      else (Да)
        #SpringGreen:**Заказ найден**;
        kill
      endif

    endif

    :Подробнее;

    }

    if (Существует несгруппированный заказ для замены\nпервого заказа в группе?) then (нет)

      partition "Условие поиска индекса подходящего заказа для разделения на два" {
      
      :Подробнее;
      detach
      
      if (В заказе больше (>=) двух рулонов?) then (нет)
        #Red:<color:White>**Заказ не найден**;
        kill
      else (да)
      endif

      if (Заказ имеет максимальное количество\nрулонов из всех?) then (нет)
        #Red:<color:White>**Заказ не найден**;
        kill
      else (да)
        #SpringGreen:**Заказ найден**;
        kill
      endif
      
      :Подробнее;

      }
      
      if (Существует большой заказ,\nкоторый можно разделить два) then (нет)
        group Состояние поиска
          #Red:<color:White>**Раскладка не может существовать**;
          #Red:<color:White>**Заказов для группировки не осталось**;
        end group
        break
      else (да)
        :Разделить подходящий заказ на два заказа;
        group Состояние поиска
          #Yellow:**Раскладка может существовать**;
          #Yellow:**Заказы для группировки могут существовать**;
        end group
        break
      endif

    else (да)
      :Обменять подходящий заказ с
      с первым заказом в группе;
      :Пересчитать % отходов;
    endif

  endwhile (нет (<color:green>можно создать раскладку))

  if (Можно создать раскладку?) then (нет)
    if (Раскладка может существовать?) then (нет)
      break       
    else (да)

    endif       
  else (да)
    :Создать раскладку и добавить в отчёт;
    :Вычесть количество произведенных рулонов из оставшихся неразложенных заказов;
    :Объединить все разделенные заказы;
  endif

endwhile (точно нет)

:Объединить все разделенные заказы;

:Добавить невошедшие в раскладки заказы в отчет как необработанные;

:Экспортировать отчёт в Excel;

stop
@enduml